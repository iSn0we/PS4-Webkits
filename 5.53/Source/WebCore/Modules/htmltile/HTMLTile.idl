/*
 * Copyright (C) 2016 Sony Interactive Entertainment Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE COMPUTER, INC. ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

[
    Conditional=MANX_HTMLTILE,
    ActiveDOMObject,
    Constructor(long x, long y),
    ConstructorCallWith=ScriptExecutionContext,
    DoNotCheckConstants,
    EventTarget,
] interface HTMLTile {
    // Event types
    const unsigned short FocusIn       = 0;
    const unsigned short FocusOut      = 1;
    const unsigned short ButtonPress   = 2;
    const unsigned short ButtonRelease = 3;

    // Attributes
    readonly attribute boolean isValid;
    readonly attribute long width;
    readonly attribute long height;
    readonly attribute ImageData imageData;

    attribute DOMString url;
    [ImplementedAs=url] attribute DOMString src;


    // Methods
    void destroy();
    void pause();
    void resume();
    void sendEvent(unsigned short event);
    void eval(DOMString string, optional StringCallback resultCallback);

    // Event handlers
    attribute EventHandler onload;
    attribute EventHandler onerror;
    attribute EventHandler onupdate;
    attribute EventHandler onlocationchange;
    attribute EventHandler onunresponsive;
    attribute EventHandler oncrash;
};
